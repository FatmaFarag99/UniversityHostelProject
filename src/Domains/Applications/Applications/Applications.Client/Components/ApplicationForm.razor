@page "/Applications/Add"
@using Newtonsoft.Json

@attribute [Authorize(Roles = "User")]


@if (!_isAllowForCreateApplication)
{
    <div class="card card-custom card-primary card-outline">
        <div class="card-body">
            <h3>
                No stage opened to register, please wait to stage opened.
            </h3>
        </div>
    </div>
}
else
{
    <EditForm Model="ApplicationViewModel" OnValidSubmit="HandleValidSubmit">
        <FluentValidator />
        <TabControl>
            <TabPage Title="Payment">
                @if (ApplicationViewModel.PaymentId != default)
                {
                    <h1>Payment Completed Successfully</h1>

                    <h2>TransactionId: @ApplicationViewModel.Payment?.TransactionId</h2>
                    <h2>Amount: @ApplicationViewModel.Payment?.PaidAmount</h2>

                    <div class="form-row">
                        <div class="form-group col-md-12 mb-2 ">
                            <button type="button" class="btn btn-primary" @onclick="() => GoToStep(ApplicationStep.BasicInformation)">Next</button>
                        </div>
                    </div>
                }
                else
                {
                    <PaymentForm PaymentViewModel=@ApplicationViewModel.Payment OnPaymentCompleted="(payment) => { ApplicationViewModel.PaymentId = payment.Id; _isPaymentCompleted = true; ApplicationViewModel.Step = ApplicationStep.BasicInformation; }" />
                }
            </TabPage>
            <TabPage Title="BasicInformation" Disabled="!_isPaymentCompleted">
                <BasicInformationComponent BasicInformationViewModel=@ApplicationViewModel.BasicInformation OnNext="async () => await GoToStep(ApplicationStep.Documents)" />
            </TabPage>
            <TabPage Title="Documents" Disabled="!_isPaymentCompleted">
                <DocumentsComponent ApplicationDocuments="ApplicationViewModel.Documents" />
            </TabPage>
            @if (!ApplicationViewModel.Step.Equals(ApplicationStep.Payment))
            {
                <div class="card-footer d-flex justify-content-end">
                    <div>
                        <div class="form-row">
                            <div class="form-group col-md-12 mb-2 ">
                                <button type="button" class="btn btn-primary" @onclick="() => Console.WriteLine(JsonConvert.SerializeObject(ApplicationViewModel))">Submit-x</button>
                            </div>
                        </div>
                        <button class="btn btn-danger mr-3" @onclick="@(() => _navigationManager.NavigateTo("/"))">Cancel</button>
                        @if (!SystemFeatureType.Equals(SystemFeatureType.Details))
                        {
                            <button type="submit" class="btn btn-success m-2" disabled="@(ApplicationViewModel.Step.Equals(ApplicationStep.Payment))">Save</button>
                        }
                    </div>
                </div>
            }
        </TabControl>
    </EditForm>
}